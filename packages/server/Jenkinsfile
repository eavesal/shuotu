pipeline{
    agent {
        label "nodejs"
    }

    environment {
        DOCKER_CREDENTIAL_ID = 'docker-hub'
        KUBECONFIG_CREDENTIAL_ID = 'kubeconfig'

        WORKING_SERVICE = 'server'

        REGISTRY = 'registry.hub.docker.com'
        DOCKERHUB_NAMESPACE = 'lijingyu68'
        APP_NAME = 'shuotu.fun'
    }

    stages {
        stage ('Checkout') {
            steps {
                checkout(scm)
            }
        }

        stage ("Install") {
            steps {
                script {
                    waitUntil {
                        try {
                            container ('nodejs') {
                                dir ("packages/${WORKING_SERVICE}") {
                                    sh 'yarn install'
                                }
                            }
                            true
                        }
                        catch (err) {
                            input "Retry?"
                            false
                        }
                    }
                }
            }
        }

        stage ("Build") {
            steps {
                script {
                    waitUntil {
                        try {
                            container ('nodejs') {
                                dir ("packages/${WORKING_SERVICE}") {
                                    sh 'yarn run build'
                                    sh 'docker build -f Dockerfile -t $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER .'
                                    withCredentials([usernamePassword(passwordVariable : 'DOCKER_PASSWORD', usernameVariable : 'DOCKER_USERNAME', credentialsId : "$DOCKER_CREDENTIAL_ID")]) {
                                        sh 'echo "$DOCKER_PASSWORD" | docker login $REGISTRY -u "$DOCKER_USERNAME" --password-stdin'
                                        sh 'docker push $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER'
                                        sh 'docker tag $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:SNAPSHOT-$BRANCH_NAME-$BUILD_NUMBER $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:latest'
                                        sh 'docker push $REGISTRY/$DOCKERHUB_NAMESPACE/$APP_NAME:latest '
                                    }
                                }       
                            }
                            true
                        }
                        catch (err) {
                            input "Retry?"
                            false
                        }
                    }
                }
            }
        }

        stage ('deploy to dev') {
            steps {
                script {
                    waitUntil {
                        try {
                            input(id: 'deploy-to-dev', message: 'deploy to shuotu-dev?')
                            dir ("packages/${WORKING_SERVICE}") {
                                kubernetesDeploy(configs: 'deploy/dev/**', enableConfigSubstitution: true, kubeconfigId: "$KUBECONFIG_CREDENTIAL_ID")
                            }
                            true
                        }
                        catch (err) {
                            input "Retry?"
                            false
                        }
                    }
                }
            }
        }
    }
}